[{"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/index.js":"1","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/context/appContext.js":"2","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/reportWebVitals.js":"3","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/App.js":"4","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/context/reducer.js":"5","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/context/actions.js":"6","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/route/AppRoute.js":"7","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/HomePage.jsx":"8","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/signIn-signUp/signIn.jsx":"9","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/signIn-signUp/signUpMedicalStudent.jsx":"10","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/signIn-signUp/routeSignUp.jsx":"11","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/signIn-signUp/signUpCompany.jsx":"12","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/signIn-signUp/signUpConsumer.jsx":"13","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/signIn-signUp/forgottenPassword.jsx":"14","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/consumer/medicalStudents.jsx":"15","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/company/addOpportunity.jsx":"16","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/company/appliedTrainee.jsx":"17","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/company/companyHomePage.jsx":"18","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/company/companyProfile.jsx":"19","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/company/traineeDetails.jsx":"20","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/company/editOpportunity.jsx":"21","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/admin/unauthorizedMiddleWare.jsx":"22","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/admin/adminHomePage.jsx":"23","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/admin/companies.jsx":"24","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/admin/adminForgottenPassword.jsx":"25","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/admin/adminPanel.jsx":"26","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/admin/addAdmin.jsx":"27","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/admin/adminSignIn.jsx":"28","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/consumer/editProfile.jsx":"29","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/consumer/opportunities.jsx":"30","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/consumer/feedBackConsumerMedical.jsx":"31","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/consumer/feedBackConsumerCompany.jsx":"32","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/company/feedBackCompany.jsx":"33","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/admin/consumers.jsx":"34","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/admin/medicalStudents.jsx":"35","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/medicalStudent/feedBackMedical.jsx":"36","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/admin/opportunities.jsx":"37","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/admin/reportedFeedBack.jsx":"38","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/stores/AdminsStore.js":"39","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/components/homePage/about.jsx":"40","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/components/homePage/achievements.jsx":"41","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/components/homePage/services.jsx":"42","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/components/charts/companyChart.jsx":"43","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/components/charts/adminBarChart.jsx":"44","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/stores/CompanyStore.js":"45","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/stores/ConsumerStore.js":"46","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/stores/OpportunityStore.js":"47","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/stores/MedicalStore.js":"48","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/components/homePage/header.jsx":"49","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/stores/PatientApplicationStore.js":"50","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/components/Nav/adminNav.jsx":"51","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/components/Nav/welcomeNav.jsx":"52","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/components/Nav/consumerNav.jsx":"53","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/components/Nav/companyNav.jsx":"54","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/stores/traineeApplicationStore.js":"55"},{"size":468,"mtime":1676965409421,"results":"56","hashOfConfig":"57"},{"size":1554,"mtime":1677662917467,"results":"58","hashOfConfig":"57"},{"size":362,"mtime":1675179414265,"results":"59","hashOfConfig":"57"},{"size":334,"mtime":1675179414196,"results":"60","hashOfConfig":"57"},{"size":311,"mtime":1677662917471,"results":"61","hashOfConfig":"57"},{"size":245,"mtime":1677662917467,"results":"62","hashOfConfig":"57"},{"size":5085,"mtime":1677777560630,"results":"63","hashOfConfig":"57"},{"size":686,"mtime":1676965409426,"results":"64","hashOfConfig":"57"},{"size":5379,"mtime":1677831338563,"results":"65","hashOfConfig":"57"},{"size":2563,"mtime":1677836163834,"results":"66","hashOfConfig":"57"},{"size":1313,"mtime":1677833346727,"results":"67","hashOfConfig":"57"},{"size":3783,"mtime":1677832879353,"results":"68","hashOfConfig":"57"},{"size":1725,"mtime":1677833287289,"results":"69","hashOfConfig":"57"},{"size":574,"mtime":1675179414260,"results":"70","hashOfConfig":"57"},{"size":3505,"mtime":1676965409436,"results":"71","hashOfConfig":"57"},{"size":4067,"mtime":1677662917478,"results":"72","hashOfConfig":"57"},{"size":5131,"mtime":1677662917479,"results":"73","hashOfConfig":"57"},{"size":2893,"mtime":1676965409432,"results":"74","hashOfConfig":"57"},{"size":3487,"mtime":1676965409433,"results":"75","hashOfConfig":"57"},{"size":3461,"mtime":1676965409434,"results":"76","hashOfConfig":"57"},{"size":3197,"mtime":1676965409434,"results":"77","hashOfConfig":"57"},{"size":683,"mtime":1676965409431,"results":"78","hashOfConfig":"57"},{"size":1593,"mtime":1676965409427,"results":"79","hashOfConfig":"57"},{"size":3809,"mtime":1677698805912,"results":"80","hashOfConfig":"57"},{"size":702,"mtime":1676965409427,"results":"81","hashOfConfig":"57"},{"size":3134,"mtime":1677662917477,"results":"82","hashOfConfig":"57"},{"size":3095,"mtime":1677682389320,"results":"83","hashOfConfig":"57"},{"size":2262,"mtime":1677662917478,"results":"84","hashOfConfig":"57"},{"size":4431,"mtime":1677777630510,"results":"85","hashOfConfig":"57"},{"size":2235,"mtime":1677777643553,"results":"86","hashOfConfig":"57"},{"size":2887,"mtime":1677774097234,"results":"87","hashOfConfig":"57"},{"size":2887,"mtime":1677774113610,"results":"88","hashOfConfig":"57"},{"size":1608,"mtime":1676965409423,"results":"89","hashOfConfig":"57"},{"size":3573,"mtime":1677702331532,"results":"90","hashOfConfig":"57"},{"size":3720,"mtime":1677777113285,"results":"91","hashOfConfig":"57"},{"size":1607,"mtime":1676965409425,"results":"92","hashOfConfig":"57"},{"size":3734,"mtime":1677777113286,"results":"93","hashOfConfig":"57"},{"size":269,"mtime":1677703077736,"results":"94","hashOfConfig":"57"},{"size":2376,"mtime":1677682389320,"results":"95","hashOfConfig":"57"},{"size":355,"mtime":1676965409420,"results":"96","hashOfConfig":"57"},{"size":1223,"mtime":1675179414242,"results":"97","hashOfConfig":"57"},{"size":1998,"mtime":1677662917455,"results":"98","hashOfConfig":"57"},{"size":1547,"mtime":1677662917450,"results":"99","hashOfConfig":"57"},{"size":1811,"mtime":1677662917450,"results":"100","hashOfConfig":"57"},{"size":3656,"mtime":1677773080527,"results":"101","hashOfConfig":"57"},{"size":2438,"mtime":1677773071139,"results":"102","hashOfConfig":"57"},{"size":3692,"mtime":1677773030203,"results":"103","hashOfConfig":"57"},{"size":3246,"mtime":1677836113838,"results":"104","hashOfConfig":"57"},{"size":749,"mtime":1675603111555,"results":"105","hashOfConfig":"57"},{"size":2564,"mtime":1677773214962,"results":"106","hashOfConfig":"57"},{"size":1507,"mtime":1675179414237,"results":"107","hashOfConfig":"57"},{"size":809,"mtime":1675179414240,"results":"108","hashOfConfig":"57"},{"size":846,"mtime":1675179414239,"results":"109","hashOfConfig":"57"},{"size":997,"mtime":1676965409418,"results":"110","hashOfConfig":"57"},{"size":3563,"mtime":1677773533292,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},"1w5g2vb",{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"115"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"115"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"115"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"115"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"115"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"115"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"115"},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"115"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"115"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"115"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"115"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"115"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"115"},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"115"},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"115"},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"291","messages":"292","suppressedMessages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"115"},"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/index.js",[],[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/context/appContext.js",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/reportWebVitals.js",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/App.js",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/context/reducer.js",["295"],[],"import {\n  DISPLAY_ALERT\n} from './actions';\n\nimport { initialState } from './appContext';\n\nconst reducer = (state, action) => {\n  if (action.type === DISPLAY_ALERT) {\n    return {\n      ...state,\n       alertType: 'danger',\n      alertText: 'Please provide all values!',\n    };\n  }\n};\n\nexport default reducer;\n","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/context/actions.js",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/route/AppRoute.js",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/HomePage.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/signIn-signUp/signIn.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/signIn-signUp/signUpMedicalStudent.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/signIn-signUp/routeSignUp.jsx",[],[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/signIn-signUp/signUpCompany.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/signIn-signUp/signUpConsumer.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/signIn-signUp/forgottenPassword.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/consumer/medicalStudents.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/company/addOpportunity.jsx",["296","297","298","299","300","301","302","303","304","305","306","307","308"],[],"import Nav from \"../../components/Nav/companyNav\";\nimport \"../../assets/css/company.css\";\nimport React, { Fragment, useState } from \"react\";\n\nconst AddOpportunity = () => {\n  //use states\n  const [job_role, setJobRole] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [skills, setSkills] = useState(\"\");\n  const [job_type, setJobType] = useState(\"\");\n  const [departments_preferred, setDepartmentPreferred] = useState(\"\");\n  const [major_preferred, setMajorPreferred] = useState(\"\");\n  const [availability_seats, setAvailabilitySeats] = useState(\"\");\n  const [salary, setSalary] = useState(\"\");\n  const [start_date, setStartDate] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [visibility, setVisibility] = useState(\"\");\n  const [createdBy, setCreatedBy] = useState(\"\");\n\n  async function createOpportunity(event) {\n    event.preventDefault();\n    const response = await fetch(\n      \"http://localhost:4000/api/v1/addOpportunity\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          job_role,\n          description,\n          skills,\n          job_type,\n          departments_preferred,\n          major_preferred,\n          availability_seats,\n          salary,\n          start_date,\n          duration,\n          city,\n          visibility,\n          createdBy,\n        }),\n      }\n    );\n    const data = await response.json();\n    console.log(\"Opportunity Added\", data);\n  }\n\n  return (\n    <Fragment>\n      <Nav />\n      <section>\n        <form onSubmit={createOpportunity}>\n          <div className=\"container backgroundAdd\">\n            <div className=\"row\">\n              <div className=\"col-sm-12 col-md-6\">\n                <p className=\"labelTag\">Job Role</p>\n                <input type=\"input\" className=\"inputStyling\" name=\"\" value=\"\" />\n                <p className=\"labelTag\">Job Description</p>\n                <input type=\"text\" className=\"inputStyling\" name=\"\" value=\"\" />\n                <p className=\"labelTag\">Departments looking for</p>\n                <select>\n                  <option value=\"\"></option>\n                  <option value=\"\"></option>\n                  <option value=\"\"></option>\n                  <option value=\"\"></option>\n                </select>\n                <p className=\"labelTag\">Major Looking for</p>\n                <select>\n                  <option value=\"\"></option>\n                  <option value=\"\"></option>\n                  <option value=\"\"></option>\n                  <option value=\"\"></option>\n                </select>\n                <p className=\"labelTag\">Training Duration</p>\n                <input\n                  type=\"number\"\n                  className=\"inputStyling\"\n                  name=\"\"\n                  value=\"\"\n                />\n              </div>\n              <div className=\"col-sm-12 col-md-6\">\n                <p className=\"labelTag\">Type of Job</p>\n                <input type=\"radio\" name=\"\" value=\"\" />\n                <input type=\"radio\" name=\"\" value=\"\" />\n                <input type=\"radio\" name=\"\" value=\"\" />\n                <div>\n                  <label className=\"labelTag\">Paid Opportunity?</label>\n                  <input type=\"checkbox\" name=\"\" value=\"\" />\n                </div>\n                <div>\n                  <input\n                    type=\"text\"\n                    className=\"inputStyling\"\n                    name=\"\"\n                    value=\"\"\n                  />\n                </div>\n                <p className=\"labelTag\">Place of the Job</p>\n                <input type=\"text\" className=\"inputStyling\" name=\"\" value=\"\" />\n                <div>\n                  <button className=\"primaryButton\" type=\"submit\">\n                    add opportunity\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </section>\n    </Fragment>\n  );\n};\n\nexport default AddOpportunity;\n","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/company/appliedTrainee.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/company/companyHomePage.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/company/companyProfile.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/company/traineeDetails.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/company/editOpportunity.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/admin/unauthorizedMiddleWare.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/admin/adminHomePage.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/admin/companies.jsx",["309"],[],"import \"../../assets/css/admin.css\";\nimport AdminNav from \"../../components/Nav/adminNav\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport CompanyStore from \"../../stores/CompanyStore.js\";\n\nconst Companies = () => {\n  const store = CompanyStore();\n\n  useEffect(() => {\n    store.fetchCompanies();\n  }, []);\n  return (\n    <Fragment>\n      <AdminNav />\n      <Container className=\"mt-3 mb-2\">\n        <h1>Companies</h1>\n        <Row className=\"m-auto pt-3 pb-1\">\n          <Col xl={3} md={6} sm={12}>\n            <input\n              className=\"inputStyling\"\n              type=\"search\"\n              name=\"\"\n              placeholder=\"Phone Number \"\n            />\n          </Col>\n          <Col xl={3} md={6} sm={12}>\n            <input\n              className=\"inputStyling\"\n              type=\"search\"\n              name=\"\"\n              placeholder=\"Trainee Name\"\n            />\n          </Col>\n          <Col xl={3} md={6} sm={12}>\n            <input\n              className=\"inputStyling\"\n              type=\"date\"\n              name=\"\"\n              placeholder=\"Joined Date\"\n            />\n          </Col>\n          <Col xl={3} md={6} sm={12}>\n            <select\n              className=\"inputStyling\"\n              name=\"cars\"\n              defaultValue=\"\"\n              placeholder=\"Status\"\n            >\n              <option defaultValue=\"saab\">Null</option>\n              <option defaultValue=\"volvo\">Active</option>\n              <option defaultValue=\"saab\">Inactive</option>\n            </select>\n          </Col>\n        </Row>\n      </Container>\n      <Container fluid>\n        <Row className=\"opportunitiesTag\">\n          <Col xl={2}>\n            <p className=\"opportunitiesMainTags\">Company</p>\n          </Col>\n          <Col xl={3}>\n            <p className=\"opportunitiesMainTags\">Register Number</p>\n          </Col>\n          <Col xl={2}>\n            <p className=\"opportunitiesMainTags\">Phone Number</p>\n          </Col>\n          <Col xl={2}>\n            <p className=\"opportunitiesMainTags\">Location</p>\n          </Col>\n          <Col xl={2}>\n            <p className=\"opportunitiesMainTags\">Website</p>\n          </Col>\n          <Col xl={1}>\n            <p className=\"opportunitiesMainTags\">Status</p>\n          </Col>\n        </Row>\n      </Container>\n      {store.companies &&\n        store.companies.map((company) => {\n          return (\n            <Container fluid key={company._id}>\n              <Row className=\"opportunitiesT\">\n                <Col xl={2}>\n                  <p className=\"opportunitiesTags\">\n                    {company.organization_name}\n                  </p>\n                </Col>\n                <Col xl={3}>\n                  <p className=\"opportunitiesTags\">{company.register_number}</p>\n                </Col>\n                <Col xl={2}>\n                  <p className=\"opportunitiesTags\">\n                    {company.supervisor_phone}\n                  </p>\n                </Col>\n                <Col xl={2}>\n                  <p className=\"opportunitiesTags\">{company.city}</p>\n                </Col>\n                <Col xl={2}>\n                  <p className=\"opportunitiesTags\">\n                    {company.organization_website}\n                  </p>\n                </Col>\n                <Col xl={1}>\n                  <form onSubmit={store.updateStatueCompany}>\n                    <select name=\"statue\" defaultValue={company.statue}>\n                      <option value=\"inactive\">inactive</option>\n                      <option value=\"active\">active</option>\n                    </select>\n                  </form>\n                </Col>\n              </Row>\n            </Container>\n          );\n        })}\n    </Fragment>\n  );\n};\n\nexport default Companies;\n","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/admin/adminForgottenPassword.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/admin/adminPanel.jsx",["310"],[],"import \"../../assets/css/admin.css\";\nimport AdminNav from \"../../components/Nav/adminNav\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport adminsStore from \"../../stores/AdminsStore.js\";\nimport React, { Fragment, useEffect } from \"react\";\n\nconst AdminPanel = () => {\n  const store = adminsStore();\n\n  const storeDelete = adminsStore((storeDelete) => {\n    return { deleteAdmin: storeDelete.deleteAdmin };\n  });\n\n  /* this to get current value int tags (input)\n  const getUpdateAdminType = (e) => {\n    const { value, name } = e.target;\n    setUpdateType({\n      ...updateType,\n      [name]: value,\n    });\n  };\n  */\n\n  useEffect(() => {\n    store.fetchAdmins();\n  }, []);\n  return (\n    <Fragment>\n      <AdminNav />\n      <Container className=\"mb-2\">\n        <Row>\n          <Col md={6} xs={12}>\n            <h1>Admin Panel</h1>\n          </Col>\n          <Col md={6} xs={12}>\n            <a className=\"btn btn-dark\" href=\"/addAdmin\">\n              add new admin\n            </a>\n          </Col>\n        </Row>\n      </Container>\n      <Container fluid>\n        <Row className=\"opportunitiesTag\">\n          <Col xl={3} md={2} xs={3}>\n            <p className=\"opportunitiesMainTags\">Name</p>\n          </Col>\n          <Col xl={3} md={3} xs={3}>\n            <p className=\"opportunitiesMainTags\">Email</p>\n          </Col>\n          <Col xl={3} md={3} xs={2}>\n            <p className=\"opportunitiesMainTags\">Phone Number</p>\n          </Col>\n          <Col xl={1} md={1} xs={1}>\n            <p className=\"opportunitiesMainTags\">type</p>\n          </Col>\n          <Col xl={2} md={1} xs={1}>\n            <p className=\"opportunitiesMainTags\">Status</p>\n          </Col>\n        </Row>\n      </Container>\n      {store.admins &&\n        store.admins.map((admin) => {\n          return (\n            <Container fluid key={admin._id}>\n              <Row className=\"opportunitiesT\">\n                <Col xl={3} md={2} xs={3}>\n                  <p className=\"opportunitiesTags\">{admin.name}</p>\n                </Col>\n                <Col xl={3} md={3} xs={3}>\n                  <p className=\"opportunitiesTags\">{admin.email}</p>\n                </Col>\n                <Col xl={3} md={3} xs={2}>\n                  <p className=\"opportunitiesTags\">{admin.phone}</p>\n                </Col>\n                <Col xl={2} md={1} xs={1}>\n                  <form onSubmit={store.updateAdminType}>\n                    <select name=\"type\" defaultValue={admin.type}>\n                      <option value=\"sub-admin\">sub-admin</option>\n                      <option value=\"main-admin\">main-admin</option>\n                    </select>\n                    <button type=\"submit\">.</button>\n                  </form>\n                </Col>\n                <Col xl={1} md={1} xs={1}>\n                  <button\n                    className=\"deleteBtn\"\n                    onClick={() => storeDelete.deleteAdmin(admin._id)}\n                  >\n                    Delete\n                  </button>\n                </Col>\n              </Row>\n            </Container>\n          );\n        })}\n    </Fragment>\n  );\n};\n\nexport default AdminPanel;\n","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/admin/addAdmin.jsx",["311","312"],[],"import \"../../assets/css/admin.css\";\nimport AdminNav from \"../../components/Nav/adminNav\";\nimport React, { Fragment, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport adminsStore from \"../../stores/AdminsStore.js\";\n\nconst showValidation = {\n  isValid: true,\n};\n\nconst AddAdmin = () => {\n  const store = adminsStore();\n\n  const [values, setValidation] = useState(showValidation);\n\n  const msg = \"\";\n\n  const validate = () => {\n    setValidation({ ...values, isValid: !values.isValid });\n    if (\n      store.name ||\n      store.email ||\n      store.password ||\n      store.type ||\n      store.phone\n    ) {\n      return (msg = \"Successfully created...\");\n    } else if (\n      !store.name ||\n      !store.email ||\n      !store.password ||\n      !store.type ||\n      !store.phone\n    ) {\n      return (msg = \"Please provide all values\");\n    }\n  };\n\n  return (\n    <Fragment>\n      <AdminNav />\n      <Container className=\"bg-white rounded p-3\">\n        <Row>\n          <Col>\n            {!values.isValid && <p>{msg}</p>}\n            <form onSubmit={store.registerAdmin}>\n              <p className=\"mb-1\">Name:</p>\n              <input\n                className=\"inputStyling\"\n                type=\"text\"\n                placeholder=\"Name\"\n                name=\"name\"\n                value={store.values.name}\n                onChange={store.handleChange}\n              />\n              <p className=\"mb-1\">Email:</p>\n              <input\n                className=\"inputStyling\"\n                type=\"email\"\n                placeholder=\"Email\"\n                name=\"email\"\n                value={store.values.email}\n                onChange={store.handleChange}\n              />\n              <p className=\"mb-1\">Phone Number:</p>\n              <input\n                className=\"inputStyling\"\n                type=\"number\"\n                name=\"phone\"\n                placeholder=\"Phone number\"\n                value={store.values.phone}\n                onChange={store.handleChange}\n              />\n              <p className=\"mb-1\">Password:</p>\n              <input\n                className=\"inputStyling\"\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                value={store.values.password}\n                onChange={store.handleChange}\n              />\n              <p className=\"mb-1\">Type of the admin:</p>\n              <select\n                className=\"inputStyling\"\n                name=\"type\"\n                placeholder=\"type\"\n                value={store.values.type}\n                onChange={store.handleChange}\n              >\n                <option>Please select a type</option>\n                <option value=\"sub-admin\">sub-admin</option>\n                <option value=\"main-admin\">main-admin</option>\n              </select>\n              <button type=\"submit\" className=\"btn login\" onClick={validate}>\n                submit\n              </button>\n            </form>\n          </Col>\n        </Row>\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default AddAdmin;\n","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/admin/adminSignIn.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/consumer/editProfile.jsx",["313"],[],"import \"../../assets/css/consumer.css\";\nimport Profile from \"../../assets/images/profileIcon.png\";\nimport ConsumerNav from \"../../components/Nav/consumerNav\";\nimport React, { Fragment, useEffect } from \"react\";\nimport TraineeApplicationStore from \"../../stores/traineeApplicationStore\";\nimport PatientApplicationStore from \"../../stores/PatientApplicationStore\";\nimport ConsumerStore from \"../../stores/ConsumerStore\";\nimport { Container } from \"react-bootstrap\";\n\nconst EditProfile = () => {\n  const traineeApplicationStore = TraineeApplicationStore();\n  const patientApplicationStore = PatientApplicationStore();\n  const consumerStore = ConsumerStore();\n\n  useEffect(() => {\n    traineeApplicationStore.fetchTraineeApplications();\n    patientApplicationStore.fetchPatientApplication();\n    consumerStore.fetchConsumers();\n  }, []);\n\n  return (\n    <Fragment>\n      <ConsumerNav />\n      <Container fluid>\n        <div className=\"container\">\n          <img\n            src={Profile}\n            className=\"mx-auto\"\n            id=\"imgProfile\"\n            alt=\"Change Profile\"\n          />\n        </div>\n        <div className=\"container backgroundProfile\">\n          <div className=\"row\">\n            <div className=\"col-sm-12 col-md-6\">\n              <p className=\"labelTag\">Full name</p>\n              <input type=\"name\" className=\"inputStyling\" name=\"\" value=\"\" />\n              <p className=\"labelTag\">Date of Birth</p>\n              <input type=\"date\" className=\"inputStyling\" name=\"\" value=\"\" />\n              <p className=\"labelTag\">Nationality</p>\n              <select className=\"inputStyling\">\n                <option value=\"\"></option>\n                <option value=\"\"></option>\n                <option value=\"\"></option>\n                <option value=\"\"></option>\n              </select>\n              <p className=\"labelTag\">Phone Number</p>\n              <input type=\"phone\" className=\"inputStyling\" name=\"\" value=\"\" />\n              <p className=\"labelTag\">GBA</p>\n              <input type=\"number\" className=\"inputStyling\" name=\"\" value=\"\" />\n              <span>out of</span>\n              <select className=\"inputStyling\">\n                <option value=\"\"></option>\n                <option value=\"\"></option>\n                <option value=\"\"></option>\n                <option value=\"\"></option>\n              </select>\n              <p className=\"labelTag\">Major</p>\n              <select className=\"inputStyling\">\n                <option value=\"\"></option>\n                <option value=\"\"></option>\n                <option value=\"\"></option>\n                <option value=\"\"></option>\n              </select>\n              <div>\n                <label className=\"labelTag\">Concentrated major?</label>\n                <input type=\"checkbox\" name=\"\" value=\"\" />\n              </div>\n              <div>\n                <input type=\"text\" className=\"inputStyling\" name=\"\" value=\"\" />\n              </div>\n            </div>\n            <div className=\"col-sm-12 col-md-6\">\n              <p className=\"labelTag\">Degree</p>\n              <select className=\"inputStyling\">\n                <option value=\"\"></option>\n                <option value=\"\"></option>\n                <option value=\"\"></option>\n                <option value=\"\"></option>\n              </select>\n              <p className=\"labelTag\">Collage</p>\n              <select className=\"inputStyling\">\n                <option value=\"\"></option>\n                <option value=\"\"></option>\n                <option value=\"\"></option>\n                <option value=\"\"></option>\n              </select>\n              <br />\n              <p className=\"labelTag\">CV</p>\n              <input type=\"file\" className=\"inputStyling\" name=\"\" value=\"\" />\n              <p className=\"labelTag\">\n                Identification Letter <span>(IF EXISTS)</span>\n              </p>\n              <input type=\"file\" className=\"inputStyling\" name=\"\" value=\"\" />\n              <p className=\"labelTag\">\n                LinkedIn Profile<span>(IF EXISTS)</span>\n              </p>\n              <input type=\"link\" className=\"inputStyling\" name=\"\" value=\"\" />\n              <p className=\"labelTag\">\n                Profile Picture<span>(IF EXISTS)</span>\n              </p>\n              <input type=\"file\" className=\"inputStyling\" name=\"\" value=\"\" />\n            </div>\n          </div>\n        </div>\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default EditProfile;\n","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/consumer/opportunities.jsx",["314"],[],"import \"../../assets/css/consumer.css\";\nimport InfoIcon from \"../../assets/images/infoIcon.png\";\nimport ConsumerNav from \"../../components/Nav/consumerNav\";\nimport OpportunityStore from \"../../stores/OpportunityStore\";\n\nimport React, { Fragment, useEffect } from \"react\";\n\nconst Opportunities = () => {\n  const opportunityStore = OpportunityStore();\n\n  useEffect(() => {\n    opportunityStore.fetchOpportunities();\n  }, []);\n\n  return (\n    <Fragment>\n      <ConsumerNav />\n      <section>\n        <div className=\"container \">\n          <div className=\"row\">\n            <div className=\"col-3 m-auto\">\n              <h1 id=\"opportunitiesHeader\">Opportunities</h1>\n            </div>\n            <div className=\"col-3 m-auto\">\n              <h1>Sorting</h1>\n            </div>\n            <div className=\"col-6 m-auto\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"  Search\"\n                name=\"\"\n                value=\"\"\n                id=\"searchInput\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n      <div className=\"row opportunitiesTag\">\n        <span className=\"col-3 opportunitiesMainTags\">Company</span>\n        <span className=\"col-3 opportunitiesMainTags\">Role</span>\n        <span className=\"col-3 opportunitiesMainTags\">Statues</span>\n        <span className=\"col-3 opportunitiesMainTags\">info</span>\n      </div>\n      {opportunityStore.opportunities &&\n        opportunityStore.opportunities.map((opportunity) => {\n          return (\n            <div className=\"row opportunitiesT\">\n              <span className=\"col-3 opportunitiesTags\">\n                {opportunity.job_role}\n              </span>\n              <span className=\"col-3 opportunitiesTags\">\n                {opportunity.major_preferred}\n              </span>\n              <span className=\"col-3 opportunitiesTags\">\n                {opportunity.statues}\n              </span>\n              <div className=\"col-3 d-flex justify-content-center\">\n                <img className=\"infoImg\" src={InfoIcon} alt=\"InfoIcon\" />\n              </div>\n            </div>\n          );\n        })}\n    </Fragment>\n  );\n};\n\nexport default Opportunities;\n","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/consumer/feedBackConsumerMedical.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/consumer/feedBackConsumerCompany.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/company/feedBackCompany.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/admin/consumers.jsx",["315"],[],"import \"../../assets/css/admin.css\";\nimport AdminNav from \"../../components/Nav/adminNav\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport ConsumerStore from \"../../stores/ConsumerStore.js\";\n\nconst Consumers = () => {\n  const store = ConsumerStore();\n\n  useEffect(() => {\n    store.fetchConsumers();\n  }, []);\n\n  return (\n    <Fragment>\n      <AdminNav />\n      <Container className=\"mt-3 mb-2\">\n        <h1>Consumers</h1>\n        <Row className=\"m-auto pt-3 pb-1\">\n          <Col xl={3} md={6} sm={12}>\n            <input\n              className=\"inputStyling\"\n              type=\"search\"\n              name=\"\"\n              value=\"\"\n              placeholder=\"Phone Number \"\n            />\n          </Col>\n          <Col xl={3} md={6} sm={12}>\n            <input\n              className=\"inputStyling\"\n              type=\"search\"\n              name=\"\"\n              value=\"\"\n              placeholder=\"Trainee Name\"\n            />\n          </Col>\n          <Col xl={3} md={6} sm={12}>\n            <input\n              className=\"inputStyling\"\n              type=\"date\"\n              name=\"\"\n              value=\"\"\n              placeholder=\"Joined Date\"\n            />\n          </Col>\n          <Col xl={3} md={6} sm={12}>\n            <select className=\"inputStyling\" name=\"cars\" placeholder=\"Status\">\n              <option value=\"saab\">Null</option>\n              <option value=\"volvo\">Unsuspend</option>\n              <option value=\"saab\">Suspended</option>\n            </select>\n          </Col>\n        </Row>\n      </Container>\n      <Container fluid>\n        <Row className=\"opportunitiesTag\">\n          <Col xl={2}>\n            <p className=\"opportunitiesMainTags\">Name</p>\n          </Col>\n          <Col xl={2}>\n            <p className=\"opportunitiesMainTags\">Major</p>\n          </Col>\n          <Col xl={2}>\n            <p className=\"opportunitiesMainTags\">Phone Number</p>\n          </Col>\n          <Col xl={3}>\n            <p className=\"opportunitiesMainTags\">Location</p>\n          </Col>\n          <Col xl={2}>\n            <p className=\"opportunitiesMainTags\">CV</p>\n          </Col>\n          <Col xl={1}>\n            <p className=\"opportunitiesMainTags\">Status</p>\n          </Col>\n        </Row>\n      </Container>\n      {store.consumers &&\n        store.consumers.map((consumer) => {\n          return (\n            <Container fluid>\n              <Row className=\"opportunitiesT\">\n                <Col xl={2}>\n                  <p className=\"opportunitiesTags\">{consumer.name}</p>\n                </Col>\n                <Col xl={2}>\n                  <p className=\"opportunitiesTags\">{consumer.major}</p>\n                </Col>\n                <Col xl={2}>\n                  <p className=\"opportunitiesTags\">{consumer.phone}</p>\n                </Col>\n                <Col xl={3}>\n                  <p className=\"opportunitiesTags\">{consumer.city}</p>\n                </Col>\n                <Col xl={2}>\n                  <p className=\"opportunitiesTags\">consumer</p>\n                </Col>\n                <Col xl={1}>\n                  <form onSubmit={store.updateConsumer}>\n                    <select name=\"statue\" defaultValue={consumer.statue}>\n                      <option value=\"suspend\">suspend</option>\n                      <option value=\"unsuspend\">unsuspend</option>\n                    </select>\n                  </form>\n                </Col>\n              </Row>\n            </Container>\n          );\n        })}\n    </Fragment>\n  );\n};\n\nexport default Consumers;\n","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/admin/medicalStudents.jsx",["316"],[],"import \"../../assets/css/admin.css\";\nimport AdminNav from \"../../components/Nav/adminNav\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport MedicalStore from \"../../stores/MedicalStore.js\";\nconst MedicalStudents = () => {\n  const store = MedicalStore();\n\n  useEffect(() => {\n    store.fetchMedicalStudents();\n  }, []);\n  return (\n    <Fragment>\n      <AdminNav />\n      <Container className=\"mt-3 mb-2\">\n        <h1>Medical Students</h1>\n        <Row className=\"m-auto pt-3 pb-1\">\n          <Col xl={3} md={6} sm={12}>\n            <input\n              className=\"inputStyling\"\n              type=\"search\"\n              name=\"\"\n              value=\"\"\n              placeholder=\"Phone Number \"\n            />\n          </Col>\n          <Col xl={3} md={6} sm={12}>\n            <input\n              className=\"inputStyling\"\n              type=\"search\"\n              name=\"\"\n              value=\"\"\n              placeholder=\"Trainee Name\"\n            />\n          </Col>\n          <Col xl={3} md={6} sm={12}>\n            <input\n              className=\"inputStyling\"\n              type=\"date\"\n              name=\"\"\n              value=\"\"\n              placeholder=\"Joined Date\"\n            />\n          </Col>\n          <Col xl={3} md={6} sm={12}>\n            <select className=\"inputStyling\" name=\"cars\" placeholder=\"Status\">\n              <option value=\"saab\">Null</option>\n              <option value=\"volvo\">Active</option>\n              <option value=\"saab\">Inactive</option>\n            </select>\n          </Col>\n        </Row>\n      </Container>\n      <Container fluid>\n        <Row className=\"opportunitiesTag\">\n          <Col xl={2}>\n            <p className=\"opportunitiesMainTags\">Name</p>\n          </Col>\n          <Col xl={3}>\n            <p className=\"opportunitiesMainTags\">Specialty</p>\n          </Col>\n          <Col xl={2}>\n            <p className=\"opportunitiesMainTags\">Phone Number</p>\n          </Col>\n          <Col xl={2}>\n            <p className=\"opportunitiesMainTags\">Location</p>\n          </Col>\n          <Col xl={2}>\n            <p className=\"opportunitiesMainTags\">Identification Letter</p>\n          </Col>\n          <Col xl={1}>\n            <p className=\"opportunitiesMainTags\">Status</p>\n          </Col>\n        </Row>\n      </Container>\n      {store.medicalStudents &&\n        store.medicalStudents.map((medicalStudent) => {\n          return (\n            <Container fluid>\n              <Row className=\"opportunitiesT\">\n                <Col xl={2}>\n                  <p className=\"opportunitiesTags\">{medicalStudent.name}</p>\n                </Col>\n                <Col xl={3}>\n                  <p className=\"opportunitiesTags\">\n                    {medicalStudent.specialty}\n                  </p>\n                </Col>\n                <Col xl={2}>\n                  <p className=\"opportunitiesTags\">{medicalStudent.phone}</p>\n                </Col>\n                <Col xl={2}>\n                  <p className=\"opportunitiesTags\">{medicalStudent.city}</p>\n                </Col>\n                <Col xl={2}>\n                  <p className=\"opportunitiesTags\">Identification Letter</p>\n                </Col>\n                <Col xl={1}>\n                  <form onSubmit={store.updateMedicalStudents}>\n                    <select name=\"statue\" defaultValue={medicalStudent.statue}>\n                      <option value=\"inactive\">inactive</option>\n                      <option value=\"active\">active</option>\n                    </select>\n                  </form>\n                </Col>\n              </Row>\n            </Container>\n          );\n        })}\n    </Fragment>\n  );\n};\n\nexport default MedicalStudents;\n","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/medicalStudent/feedBackMedical.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/admin/opportunities.jsx",["317"],[],"import \"../../assets/css/admin.css\";\nimport AdminNav from \"../../components/Nav/adminNav\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport OpportunityStore from \"../../stores/OpportunityStore.js\";\n\nconst Opportunities = () => {\n  const store = OpportunityStore();\n\n  const storeDelete = OpportunityStore((storeDelete) => {\n    return { deleteOpportunity: storeDelete.deleteOpportunity };\n  });\n\n  useEffect(() => {\n    store.fetchOpportunities();\n  }, []);\n\n  return (\n    <Fragment>\n      <AdminNav />\n      <Container className=\"mt-3 mb-2\">\n        <h1>Opportunities</h1>\n        <Row className=\"m-auto pt-3 pb-1\">\n          <Col xl={3} md={6} sm={12}>\n            <input\n              className=\"inputStyling\"\n              type=\"search\"\n              name=\"\"\n              value=\"\"\n              placeholder=\"Phone Number \"\n            />\n          </Col>\n          <Col xl={3} md={6} sm={12}>\n            <input\n              className=\"inputStyling\"\n              type=\"search\"\n              name=\"\"\n              value=\"\"\n              placeholder=\"Trainee Name\"\n            />\n          </Col>\n          <Col xl={3} md={6} sm={12}>\n            <input\n              className=\"inputStyling\"\n              type=\"date\"\n              name=\"\"\n              value=\"\"\n              placeholder=\"Joined Date\"\n            />\n          </Col>\n          <Col xl={3} md={6} sm={12}>\n            <select className=\"inputStyling\" name=\"cars\" placeholder=\"Status\">\n              <option value=\"saab\">Null</option>\n              <option value=\"volvo\">Unsuspend</option>\n              <option value=\"saab\">Suspended</option>\n            </select>\n          </Col>\n        </Row>\n      </Container>\n      <Container fluid>\n        <Row className=\"opportunitiesTag\">\n          <Col xl={2}>\n            <p className=\"opportunitiesMainTags\">Job Role</p>\n          </Col>\n          <Col xl={2}>\n            <p className=\"opportunitiesMainTags\">Duration</p>\n          </Col>\n          <Col xl={2}>\n            <p className=\"opportunitiesMainTags\">CreatedAt</p>\n          </Col>\n          <Col xl={3}>\n            <p className=\"opportunitiesMainTags\">Location</p>\n          </Col>\n          <Col xl={2}>\n            <p className=\"opportunitiesMainTags\">type</p>\n          </Col>\n          <Col xl={1}>\n            <p className=\"opportunitiesMainTags\">Status</p>\n          </Col>\n        </Row>\n      </Container>\n      {store.opportunities &&\n        store.opportunities.map((opportunity) => {\n          return (\n            <Container fluid>\n              <Row className=\"opportunitiesT\">\n                <Col xl={2}>\n                  <p className=\"opportunitiesTags\">{opportunity.job_role}</p>\n                </Col>\n                <Col xl={2}>\n                  <p className=\"opportunitiesTags\">{opportunity.duration}</p>\n                </Col>\n                <Col xl={2}>\n                  <p className=\"opportunitiesTags\">{opportunity.createdAt}</p>\n                </Col>\n                <Col xl={3}>\n                  <p className=\"opportunitiesTags\">{opportunity.city}</p>\n                </Col>\n                <Col xl={2}>\n                  <p className=\"opportunitiesTags\">{opportunity.job_type}</p>\n                </Col>\n                <Col xl={1}>\n                  <button\n                    className=\"deleteBtn\"\n                    onClick={() =>\n                      storeDelete.deleteOpportunity(opportunity._id)\n                    }\n                  >\n                    Delete\n                  </button>\n                </Col>\n              </Row>\n            </Container>\n          );\n        })}\n    </Fragment>\n  );\n};\n\nexport default Opportunities;\n","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/pages/admin/reportedFeedBack.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/stores/AdminsStore.js",["318"],[],"import { create } from 'zustand';\nimport axios from 'axios';\n\nconst AdminsStore = create((set) => ({\n    admins: null,\n\n    fetchAdmins: async () => {\n        // Fetch the admins\n        const res = await axios.get(\"http://localhost:4000/api/v1/admins\");\n        // Set to state\n        set({admins: res.data.admins});\n      }, \n\n      deleteAdmin: async (_id) => {\n        const res = await axios.delete(\n          \"http://localhost:4000/api/v1/admins/\" + _id\n        );\n\n        const { admins } = AdminsStore.getState();\n\n        //update page;\n        const newAdmins = [...admins].filter((admin) => {\n          return admin._id !== _id;\n        });\n        set({ admins: newAdmins });\n      },\n\n      updateType: {\n        _id: null,\n        type: \"\",\n      },\n\n      updateAdminType: async (e) => {\n        e.preventDefault();\n\n        const {\n          updateType: { type, _id },\n          admins,\n        } = AdminsStore.getState();\n    \n        // Send the update request\n        const res = await axios.put(`http://localhost:4000/api/v1/admins/${_id}`, {\n          type,\n        });\n    \n        // Update state\n        const newAdmins = [...admins];\n        const adminIndex = admins.findIndex((admin) => {\n          return admin._id === _id;\n        });\n        newAdmins[adminIndex] = res.data.admin;\n    \n        set({\n          admins: newAdmins,\n          updateType: {\n            _id: null,\n            type: \"\",\n          },\n        });\n      },\n\n      values: {\n        name: \"\",\n        email: \"\",\n        type: \"\",\n        phone: \"\",\n        password: \"\",\n      },\n\n      registerAdmin: async (e) => {\n        e.preventDefault();\n        const { values, admins } = AdminsStore.getState();\n\n        // add admin\n        const res = await axios.post(\n            \"http://localhost:4000/api/v1/admins/registerAdmin\",\n          values\n        );\n        set({\n          admins: [...admins, res.data.admin],\n          values: {\n            name: \"\",\n            email: \"\",\n            type: \"\",\n            phone: \"\",\n            password: \"\",\n          },\n        });\n    },\n      \n      handleChange: async (e) =>{\n        const { name, value } = e.target;\n\n        set((state)=>{\n          return{\n            values:{\n              ...state.values,\n              [name]:value,\n            }\n          }\n        })\n      }\n\n}))\n\nexport default AdminsStore;","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/components/homePage/about.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/components/homePage/achievements.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/components/homePage/services.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/components/charts/companyChart.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/components/charts/adminBarChart.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/stores/CompanyStore.js",["319"],[],"import { create } from \"zustand\";\nimport axios from \"axios\";\n\nconst CompanyStore = create((set) => ({\n  companies: null,\n\n  fetchCompanies: async () => {\n    // Fetch the companies\n    const res = await axios.get(\"http://localhost:4000/api/v1/companies\");\n    // Set to state\n    set({ companies: res.data.companies });\n  },\n\n  deleteCompany: async (_id) => {\n    const res = await axios.delete(\n      \"http://localhost:4000/api/v1/companies/\" + _id\n    );\n\n    const { companies } = CompanyStore.getState();\n\n    //update page;\n    const newCompanies = [...companies].filter((company) => {\n      return company._id !== _id;\n    });\n    set({ companies: newCompanies });\n  },\n\n  updateProfile: {\n    _id: null,\n    organization_name: \"\",\n    register_number: \"\",\n    organization_phone: \"\",\n    organization_website: \"\",\n    organization_bio: \"\",\n    supervisor_name: \"\",\n    organization_email: \"\",\n    email: \"\",\n    supervisor_phone: \"\",\n    country: \"\",\n    city: \"\",\n  },\n\n  updateProfileCompany: async (e) => {\n    e.preventDefault();\n\n    const {\n      updateProfile: {\n        organization_name,\n        register_number,\n        organization_phone,\n        organization_website,\n        organization_bio,\n        supervisor_name,\n        organization_email,\n        supervisor_phone,\n        country,\n        city,\n        _id,\n      },\n      companies,\n    } = CompanyStore.getState();\n\n    // Send the update request\n    const res = await axios.put(\n      `http://localhost:4000/api/v1/companies/${_id}`,\n      {\n        organization_name,\n        register_number,\n        organization_phone,\n        organization_website,\n        organization_bio,\n        supervisor_name,\n        organization_email,\n        supervisor_phone,\n        country,\n        city,\n      }\n    );\n\n    // Update state\n    const newCompanies = [...companies];\n    const companyIndex = companies.findIndex((company) => {\n      return company._id === _id;\n    });\n    newCompanies[companyIndex] = res.data.company;\n\n    set({\n      companies: newCompanies,\n      updateProfile: {\n        _id: null,\n        organization_name: \"\",\n        register_number: \"\",\n        organization_phone: \"\",\n        organization_website: \"\",\n        organization_bio: \"\",\n        supervisor_name: \"\",\n        password: \"\",\n        organization_email: \"\",\n        email: \"\",\n        supervisor_phone: \"\",\n        country: \"\",\n        city: \"\",\n      },\n    });\n  },\n\n  values: {\n    organization_name: \"\",\n    register_number: \"\",\n    organization_phone: \"\",\n    organization_website: \"\",\n    organization_bio: \"\",\n    supervisor_name: \"\",\n    password: \"\",\n    organization_email: \"\",\n    email: \"\",\n    supervisor_phone: \"\",\n    country: \"\",\n    city: \"\",\n  },\n\n  registerCompany: async (e) => {\n    e.preventDefault();\n    const { values, companies } = CompanyStore.getState();\n\n    // add company\n    const res = await axios.post(\n      \"http://localhost:4000/api/v1/companies/registerCompany\",\n      values\n    );\n    set({\n      companies: [...companies, res.data.company],\n      values: {\n        organization_name: \"\",\n        register_number: \"\",\n        organization_phone: \"\",\n        organization_website: \"\",\n        organization_bio: \"\",\n        supervisor_name: \"\",\n        password: \"\",\n        organization_email: \"\",\n        email: \"\",\n        supervisor_phone: \"\",\n        country: \"\",\n        city: \"\",\n      },\n    });\n  },\n\n  handleChange: async (e) => {\n    const { name, value } = e.target;\n\n    set((state) => {\n      return {\n        values: {\n          ...state.values,\n          [name]: value,\n        },\n      };\n    });\n  },\n}));\n\nexport default CompanyStore;\n","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/stores/ConsumerStore.js",["320"],[],"import { create } from \"zustand\";\nimport axios from \"axios\";\n\nconst ConsumerStore = create((set) => ({\n  consumers: null,\n\n  fetchConsumers: async () => {\n    // Fetch the consumers\n    const res = await axios.get(\"http://localhost:4000/api/v1/consumers\");\n    // Set to state\n    set({ consumers: res.data.consumers });\n  },\n\n  deleteConsumer: async (_id) => {\n    const res = await axios.delete(\n      \"http://localhost:4000/api/v1/consumers/\" + _id\n    );\n\n    const { consumers } = ConsumerStore.getState();\n\n    //update page;\n    const newConsumers = [...consumers].filter((consumer) => {\n      return consumer._id !== _id;\n    });\n    set({ consumers: newConsumers });\n  },\n\n  updateProfile: {\n    _id: null,\n    name: \"\",\n    email: \"\",\n    phone_number: \"\",\n    nationality: \"\",\n  },\n\n  updateConsumer: async (e) => {\n    e.preventDefault();\n\n    const {\n      updateProfile: { name, email, phone_number, nationality, _id },\n      consumers,\n    } = ConsumerStore.getState();\n\n    // Send the update request\n    const res = await axios.put(\n      `http://localhost:4000/api/v1/consumers/${_id}`,\n      {\n        name,\n        email,\n        phone_number,\n        nationality,\n      }\n    );\n\n    // Update state\n    const newConsumers = [...consumers];\n    const consumerIndex = consumers.findIndex((consumer) => {\n      return consumer._id === _id;\n    });\n    newConsumers[consumerIndex] = res.data.consumer;\n\n    set({\n      consumers: newConsumers,\n      updateProfile: {\n        _id: null,\n        name: \"\",\n        email: \"\",\n        phone_number: \"\",\n        nationality: \"\",\n      },\n    });\n  },\n\n  values: {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    phone_number: \"\",\n    nationality: \"\",\n  },\n\n  registerConsumer: async (e) => {\n    e.preventDefault();\n    const { values, consumers } = ConsumerStore.getState();\n\n    // add consumer\n    const res = await axios.post(\n      \"http://localhost:4000/api/v1/consumers/registerConsumer\",\n      values\n    );\n    set({\n      consumers: [...consumers, res.data.consumer],\n      values: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        phone_number: \"\",\n        nationality: \"\",\n      },\n    });\n  },\n\n  handleChange: async (e) => {\n    const { name, value } = e.target;\n\n    set((state) => {\n      return {\n        values: {\n          ...state.values,\n          [name]: value,\n        },\n      };\n    });\n  },\n}));\n\nexport default ConsumerStore;\n","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/stores/OpportunityStore.js",["321"],[],"import { create } from \"zustand\";\nimport axios from \"axios\";\n\nconst OpportunityStore = create((set) => ({\n  opportunities: null,\n\n  fetchOpportunities: async () => {\n    // Fetch the opportunities\n    const res = await axios.get(\"http://localhost:4000/api/v1/opportunities\");\n    // Set to state\n    set({ opportunities: res.data.opportunities });\n  },\n\n  deleteOpportunity: async (_id) => {\n    const res = await axios.delete(\n      \"http://localhost:4000/api/v1/opportunities/\" + _id\n    );\n\n    const { opportunities } = OpportunityStore.getState();\n\n    //update page;\n    const newOpportunities = [...opportunities].filter((opportunity) => {\n      return opportunity._id !== _id;\n    });\n    set({ opportunities: newOpportunities });\n  },\n\n  updateStatue: {\n    _id: null,\n    job_role: \"\",\n    description: \"\",\n    skills: \"\",\n    job_type: \"\",\n    departments_preferred: \"\",\n    major_preferred: \"\",\n    availability_seats: \"\",\n    salary: \"\",\n    start_date: \"\",\n    duration: \"\",\n    city: \"\",\n    visibility: \"\",\n  },\n\n  updateOpportunity: async (e) => {\n    e.preventDefault();\n\n    const {\n      updateStatue: {\n        job_role,\n        description,\n        skills,\n        job_type,\n        departments_preferred,\n        major_preferred,\n        availability_seats,\n        salary,\n        start_date,\n        duration,\n        city,\n        visibility,\n        _id,\n      },\n      opportunities,\n    } = OpportunityStore.getState();\n\n    // Send the update request\n    const res = await axios.put(\n      `http://localhost:4000/api/v1/opportunities/${_id}`,\n      {\n        job_role,\n        description,\n        skills,\n        job_type,\n        departments_preferred,\n        major_preferred,\n        availability_seats,\n        salary,\n        start_date,\n        duration,\n        city,\n        visibility,\n      }\n    );\n\n    // Update state\n    const newOpportunities = [...opportunities];\n    const opportunityIndex = opportunities.findIndex((opportunity) => {\n      return opportunity._id === _id;\n    });\n    newOpportunities[opportunityIndex] = res.data.opportunity;\n\n    set({\n      opportunities: newOpportunities,\n      updateType: {\n        _id: null,\n        job_role: \"\",\n        description: \"\",\n        skills: \"\",\n        job_type: \"\",\n        departments_preferred: \"\",\n        major_preferred: \"\",\n        availability_seats: \"\",\n        salary: \"\",\n        start_date: \"\",\n        duration: \"\",\n        city: \"\",\n        visibility: \"\",\n      },\n    });\n  },\n\n  values: {\n    job_role: \"\",\n    description: \"\",\n    skills: \"\",\n    job_type: \"\",\n    departments_preferred: \"\",\n    major_preferred: \"\",\n    availability_seats: \"\",\n    salary: \"\",\n    start_date: \"\",\n    duration: \"\",\n    city: \"\",\n    visibility: \"\",\n  },\n\n  registerOpportunity: async (e) => {\n    e.preventDefault();\n    const { values, opportunities } = OpportunityStore.getState();\n\n    // add opportunity\n    const res = await axios.post(\n      \"http://localhost:4000/api/v1/opportunities/registerOpportunity\",\n      values\n    );\n    set({\n      opportunities: [...opportunities, res.data.opportunity],\n      values: {\n        job_role: \"\",\n        description: \"\",\n        skills: \"\",\n        job_type: \"\",\n        departments_preferred: \"\",\n        major_preferred: \"\",\n        availability_seats: \"\",\n        salary: \"\",\n        start_date: \"\",\n        duration: \"\",\n        city: \"\",\n        visibility: \"\",\n      },\n    });\n  },\n\n  handleChange: async (e) => {\n    const { name, value } = e.target;\n\n    set((state) => {\n      return {\n        values: {\n          ...state.values,\n          [name]: value,\n        },\n      };\n    });\n  },\n}));\n\nexport default OpportunityStore;\n","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/stores/MedicalStore.js",["322","323","324","325"],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/components/homePage/header.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/stores/PatientApplicationStore.js",["326"],[],"import { create } from \"zustand\";\nimport axios from \"axios\";\n\nconst PatientApplicationStore = create((set) => ({\n  patientApplications: null,\n\n  fetchPatientApplications: async () => {\n    // Fetch the patientApplications\n    const res = await axios.get(\n      \"http://localhost:4000/api/v1/patientApplications\"\n    );\n    // Set to state\n    set({ patientApplications: res.data.patientApplications });\n  },\n\n  deletePatientApplication: async (_id) => {\n    const res = await axios.delete(\n      \"http://localhost:4000/api/v1/patientApplications/\" + _id\n    );\n\n    const { patientApplications } = PatientApplicationStore.getState();\n\n    //update page;\n    const newPatientApplications = [...patientApplications].filter(\n      (patientApplication) => {\n        return patientApplication._id !== _id;\n      }\n    );\n    set({ patientApplications: newPatientApplications });\n  },\n\n  updateStatue: {\n    _id: null,\n    symptoms: \"\",\n  },\n\n  updatePatientApplication: async (e) => {\n    e.preventDefault();\n\n    const {\n      updateStatue: { symptoms, _id },\n      patientApplications,\n    } = PatientApplicationStore.getState();\n\n    // Send the update request\n    const res = await axios.put(\n      `http://localhost:4000/api/v1/patientApplications/${_id}`,\n      {\n        symptoms,\n      }\n    );\n\n    // Update state\n    const newPatientApplications = [...patientApplications];\n    const patientApplicationIndex = patientApplications.findIndex(\n      (patientApplication) => {\n        return patientApplication._id === _id;\n      }\n    );\n    newPatientApplications[patientApplicationIndex] =\n      res.data.patientApplication;\n\n    set({\n      patientApplications: newPatientApplications,\n      updateType: {\n        _id: null,\n        symptoms: \"\",\n      },\n    });\n  },\n\n  values: {\n    symptoms: \"\",\n  },\n\n  registerPatientApplication: async (e) => {\n    e.preventDefault();\n    const { values, patientApplications } = PatientApplicationStore.getState();\n\n    // add PatientApplication\n    const res = await axios.post(\n      \"http://localhost:4000/api/v1/patientApplications/registerPatientApplication\",\n      values\n    );\n    set({\n      patientApplications: [\n        ...patientApplications,\n        res.data.patientApplication,\n      ],\n      values: {\n        symptoms: \"\",\n      },\n    });\n  },\n\n  handleChange: async (e) => {\n    const { name, value } = e.target;\n\n    set((state) => {\n      return {\n        values: {\n          ...state.values,\n          [name]: value,\n        },\n      };\n    });\n  },\n}));\n\nexport default PatientApplicationStore;\n","/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/components/Nav/adminNav.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/components/Nav/welcomeNav.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/components/Nav/consumerNav.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/components/Nav/companyNav.jsx",[],[],"/Users/qassamalaliwi/Documents/GitHub/Applier/client/src/stores/traineeApplicationStore.js",["327"],[],"import { create } from \"zustand\";\nimport axios from \"axios\";\n\nconst TraineeApplicationStore = create((set) => ({\n  traineeApplications: null,\n\n  fetchTraineeApplications: async () => {\n    // Fetch the traineeApplications\n    const res = await axios.get(\n      \"http://localhost:4000/api/v1/traineeApplications\"\n    );\n    // Set to state\n    set({ traineeApplications: res.data.traineeApplications });\n  },\n\n  deleteTraineeApplication: async (_id) => {\n    const res = await axios.delete(\n      \"http://localhost:4000/api/v1/traineeApplications/\" + _id\n    );\n\n    const { traineeApplications } = TraineeApplicationStore.getState();\n\n    //update page;\n    const newTraineeApplications = [...traineeApplications].filter(\n      (traineeApplication) => {\n        return traineeApplication._id !== _id;\n      }\n    );\n    set({ traineeApplications: newTraineeApplications });\n  },\n\n  updateStatue: {\n    _id: null,\n    university: \"\",\n    major: \"\",\n    gpa: \"\",\n    gpa_statue: \"\",\n    concentrated_major: \"\",\n    skills: \"\",\n    cv: \"\",\n    linkedIn_profile: \"\",\n    experience: \"\",\n  },\n\n  updateTraineeApplication: async (e) => {\n    e.preventDefault();\n\n    const {\n      updateStatue: {\n        university,\n        major,\n        gpa,\n        gpa_statue,\n        concentrated_major,\n        skills,\n        cv,\n        linkedIn_profile,\n        experience,\n        _id,\n      },\n      traineeApplications,\n    } = TraineeApplicationStore.getState();\n\n    // Send the update request\n    const res = await axios.put(\n      `http://localhost:4000/api/v1/traineeApplications/${_id}`,\n      {\n        university,\n        major,\n        gpa,\n        gpa_statue,\n        concentrated_major,\n        skills,\n        cv,\n        linkedIn_profile,\n        experience,\n      }\n    );\n\n    // Update state\n    const newTraineeApplications = [...traineeApplications];\n    const traineeApplicationIndex = traineeApplications.findIndex(\n      (traineeApplication) => {\n        return traineeApplication._id === _id;\n      }\n    );\n    newTraineeApplications[traineeApplicationIndex] =\n      res.data.traineeApplication;\n\n    set({\n      traineeApplications: newTraineeApplications,\n      updateType: {\n        _id: null,\n        university: \"\",\n        major: \"\",\n        gpa: \"\",\n        gpa_statue: \"\",\n        concentrated_major: \"\",\n        skills: \"\",\n        cv: \"\",\n        linkedIn_profile: \"\",\n        experience: \"\",\n      },\n    });\n  },\n\n  values: {\n    university: \"\",\n    major: \"\",\n    gpa: \"\",\n    gpa_statue: \"\",\n    concentrated_major: \"\",\n    skills: \"\",\n    cv: \"\",\n    linkedIn_profile: \"\",\n    experience: \"\",\n  },\n\n  registerTraineeApplication: async (e) => {\n    e.preventDefault();\n    const { values, traineeApplications } = TraineeApplicationStore.getState();\n\n    // add traineeApplication\n    const res = await axios.post(\n      \"http://localhost:4000/api/v1/traineeApplications/registerTraineeApplication\",\n      values\n    );\n    set({\n      traineeApplications: [\n        ...traineeApplications,\n        res.data.traineeApplication,\n      ],\n      values: {\n        university: \"\",\n        major: \"\",\n        gpa: \"\",\n        gpa_statue: \"\",\n        concentrated_major: \"\",\n        skills: \"\",\n        cv: \"\",\n        linkedIn_profile: \"\",\n        experience: \"\",\n      },\n    });\n  },\n\n  handleChange: async (e) => {\n    const { name, value } = e.target;\n\n    set((state) => {\n      return {\n        values: {\n          ...state.values,\n          [name]: value,\n        },\n      };\n    });\n  },\n}));\n\nexport default TraineeApplicationStore;\n",{"ruleId":"328","severity":1,"message":"329","line":5,"column":10,"nodeType":"330","messageId":"331","endLine":5,"endColumn":22},{"ruleId":"328","severity":1,"message":"332","line":7,"column":20,"nodeType":"330","messageId":"331","endLine":7,"endColumn":30},{"ruleId":"328","severity":1,"message":"333","line":8,"column":23,"nodeType":"330","messageId":"331","endLine":8,"endColumn":37},{"ruleId":"328","severity":1,"message":"334","line":9,"column":18,"nodeType":"330","messageId":"331","endLine":9,"endColumn":27},{"ruleId":"328","severity":1,"message":"335","line":10,"column":20,"nodeType":"330","messageId":"331","endLine":10,"endColumn":30},{"ruleId":"328","severity":1,"message":"336","line":11,"column":33,"nodeType":"330","messageId":"331","endLine":11,"endColumn":55},{"ruleId":"328","severity":1,"message":"337","line":12,"column":27,"nodeType":"330","messageId":"331","endLine":12,"endColumn":44},{"ruleId":"328","severity":1,"message":"338","line":13,"column":30,"nodeType":"330","messageId":"331","endLine":13,"endColumn":50},{"ruleId":"328","severity":1,"message":"339","line":14,"column":18,"nodeType":"330","messageId":"331","endLine":14,"endColumn":27},{"ruleId":"328","severity":1,"message":"340","line":15,"column":22,"nodeType":"330","messageId":"331","endLine":15,"endColumn":34},{"ruleId":"328","severity":1,"message":"341","line":16,"column":20,"nodeType":"330","messageId":"331","endLine":16,"endColumn":31},{"ruleId":"328","severity":1,"message":"342","line":17,"column":16,"nodeType":"330","messageId":"331","endLine":17,"endColumn":23},{"ruleId":"328","severity":1,"message":"343","line":18,"column":22,"nodeType":"330","messageId":"331","endLine":18,"endColumn":35},{"ruleId":"328","severity":1,"message":"344","line":19,"column":21,"nodeType":"330","messageId":"331","endLine":19,"endColumn":33},{"ruleId":"345","severity":1,"message":"346","line":12,"column":6,"nodeType":"347","endLine":12,"endColumn":8,"suggestions":"348"},{"ruleId":"345","severity":1,"message":"346","line":26,"column":6,"nodeType":"347","endLine":26,"endColumn":8,"suggestions":"349"},{"ruleId":"350","severity":1,"message":"351","line":27,"column":15,"nodeType":"330","messageId":"352","endLine":27,"endColumn":18},{"ruleId":"350","severity":1,"message":"351","line":35,"column":15,"nodeType":"330","messageId":"352","endLine":35,"endColumn":18},{"ruleId":"345","severity":1,"message":"353","line":19,"column":6,"nodeType":"347","endLine":19,"endColumn":8,"suggestions":"354"},{"ruleId":"345","severity":1,"message":"355","line":13,"column":6,"nodeType":"347","endLine":13,"endColumn":8,"suggestions":"356"},{"ruleId":"345","severity":1,"message":"346","line":12,"column":6,"nodeType":"347","endLine":12,"endColumn":8,"suggestions":"357"},{"ruleId":"345","severity":1,"message":"346","line":11,"column":6,"nodeType":"347","endLine":11,"endColumn":8,"suggestions":"358"},{"ruleId":"345","severity":1,"message":"346","line":16,"column":6,"nodeType":"347","endLine":16,"endColumn":8,"suggestions":"359"},{"ruleId":"328","severity":1,"message":"360","line":15,"column":15,"nodeType":"330","messageId":"331","endLine":15,"endColumn":18},{"ruleId":"328","severity":1,"message":"360","line":15,"column":11,"nodeType":"330","messageId":"331","endLine":15,"endColumn":14},{"ruleId":"328","severity":1,"message":"360","line":15,"column":11,"nodeType":"330","messageId":"331","endLine":15,"endColumn":14},{"ruleId":"328","severity":1,"message":"360","line":15,"column":11,"nodeType":"330","messageId":"331","endLine":15,"endColumn":14},{"ruleId":"328","severity":1,"message":"360","line":15,"column":11,"nodeType":"330","messageId":"331","endLine":15,"endColumn":14},{"ruleId":"328","severity":1,"message":"361","line":46,"column":9,"nodeType":"330","messageId":"331","endLine":46,"endColumn":14},{"ruleId":"362","severity":1,"message":"363","line":102,"column":5,"nodeType":"364","messageId":"365","endLine":102,"endColumn":17},{"ruleId":"362","severity":1,"message":"363","line":126,"column":9,"nodeType":"364","messageId":"365","endLine":126,"endColumn":21},{"ruleId":"328","severity":1,"message":"360","line":17,"column":11,"nodeType":"330","messageId":"331","endLine":17,"endColumn":14},{"ruleId":"328","severity":1,"message":"360","line":17,"column":11,"nodeType":"330","messageId":"331","endLine":17,"endColumn":14},"no-unused-vars","'initialState' is defined but never used.","Identifier","unusedVar","'setJobRole' is assigned a value but never used.","'setDescription' is assigned a value but never used.","'setSkills' is assigned a value but never used.","'setJobType' is assigned a value but never used.","'setDepartmentPreferred' is assigned a value but never used.","'setMajorPreferred' is assigned a value but never used.","'setAvailabilitySeats' is assigned a value but never used.","'setSalary' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","'setDuration' is assigned a value but never used.","'setCity' is assigned a value but never used.","'setVisibility' is assigned a value but never used.","'setCreatedBy' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.","ArrayExpression",["366"],["367"],"no-const-assign","'msg' is constant.","const","React Hook useEffect has missing dependencies: 'consumerStore', 'patientApplicationStore', and 'traineeApplicationStore'. Either include them or remove the dependency array.",["368"],"React Hook useEffect has a missing dependency: 'opportunityStore'. Either include it or remove the dependency array.",["369"],["370"],["371"],["372"],"'res' is assigned a value but never used.","'email' is assigned a value but never used.","no-dupe-keys","Duplicate key 'phone_number'.","ObjectExpression","unexpected",{"desc":"373","fix":"374"},{"desc":"373","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"373","fix":"380"},{"desc":"373","fix":"381"},{"desc":"373","fix":"382"},"Update the dependencies array to be: [store]",{"range":"383","text":"384"},{"range":"385","text":"384"},"Update the dependencies array to be: [consumerStore, patientApplicationStore, traineeApplicationStore]",{"range":"386","text":"387"},"Update the dependencies array to be: [opportunityStore]",{"range":"388","text":"389"},{"range":"390","text":"384"},{"range":"391","text":"384"},{"range":"392","text":"384"},[368,370],"[store]",[681,683],[829,831],"[consumerStore, patientApplicationStore, traineeApplicationStore]",[419,421],"[opportunityStore]",[371,373],[379,381],[518,520]]