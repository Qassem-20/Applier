{"ast":null,"code":"import { create } from \"zustand\";\nimport axios from \"axios\";\nconst OpportunityStore = create(_c = set => ({\n  opportunities: null,\n  opportunity: null,\n  fetchOpportunities: async () => {\n    // Fetch the opportunities\n    const res = await axios.get(\"/api/v1/OpportunitiesApplications\", {\n      withCredentials: true\n    }); // Set to state\n\n    set({\n      opportunities: res.data\n    });\n  },\n  fetchOpportunity: async _id => {\n    // Fetch the consumers\n    const res = await axios.get(`/api/v1/opportunities/${_id}`, {\n      withCredentials: true\n    }); // Set to state\n\n    set({\n      opportunity: res.data.opportunity\n    });\n  },\n  fetchOpportunitiesCompany: async () => {\n    // Fetch the opportunities\n    const res = await axios.get(\"/api/v1/opportunitiesCompany\", {\n      withCredentials: true\n    }); // Set to state\n\n    set({\n      opportunities: res.data.opportunities\n    });\n  },\n  // fetchOpportunitiesCompanySorted\n  fetchOpportunitiesCompanySorted: async () => {\n    // Fetch the opportunities\n    const res = await axios.get(\"/api/v1/fetchOpportunitiesCompanySorted\", {\n      withCredentials: true\n    }); // Set to state\n\n    set({\n      opportunities: res.data.opportunities\n    });\n  },\n  deleteOpportunity: async _id => {\n    await axios.delete(\"/api/v1/opportunities/\" + _id, {\n      withCredentials: true\n    });\n    const {\n      opportunities\n    } = OpportunityStore.getState(); //update page;\n\n    const newOpportunities = [...opportunities].filter(opportunity => {\n      return opportunity._id !== _id;\n    });\n    set({\n      opportunities: newOpportunities\n    });\n  },\n  updateStatue: {\n    _id: null,\n    job_role: \"\",\n    description: \"\",\n    skills: \"\",\n    job_type: \"\",\n    departments_preferred: \"\",\n    major_preferred: \"\",\n    availability_seats: \"\",\n    salary: \"\",\n    start_date: \"\",\n    duration: \"\",\n    city: \"\",\n    visibility: \"\"\n  },\n  toggleUpdate: _ref => {\n    let {\n      _id,\n      job_role,\n      description,\n      skills,\n      job_type,\n      departments_preferred,\n      major_preferred,\n      availability_seats,\n      salary,\n      start_date,\n      duration,\n      city,\n      visibility\n    } = _ref;\n    set({\n      updateStatue: {\n        job_role,\n        description,\n        skills,\n        job_type,\n        departments_preferred,\n        major_preferred,\n        availability_seats,\n        salary,\n        start_date,\n        duration,\n        city,\n        visibility,\n        _id\n      }\n    });\n  },\n  updateOpportunity: async () => {\n    const {\n      updateStatue: {\n        job_role,\n        description,\n        skills,\n        job_type,\n        departments_preferred,\n        major_preferred,\n        availability_seats,\n        salary,\n        start_date,\n        duration,\n        city,\n        visibility,\n        _id\n      }\n    } = OpportunityStore.getState(); // Send the update request\n\n    await axios.put(`/api/v1/opportunities/${_id}`, {\n      job_role,\n      description,\n      skills,\n      job_type,\n      departments_preferred,\n      major_preferred,\n      availability_seats,\n      salary,\n      start_date,\n      duration,\n      city,\n      visibility\n    }, {\n      withCredentials: true\n    });\n    set({\n      updateStatue: {\n        _id: null,\n        job_role: \"\",\n        description: \"\",\n        skills: \"\",\n        job_type: \"\",\n        departments_preferred: \"\",\n        major_preferred: \"\",\n        availability_seats: \"\",\n        salary: \"\",\n        start_date: \"\",\n        duration: \"\",\n        city: \"\",\n        visibility: \"\"\n      }\n    });\n  },\n  values: {\n    job_role: \"\",\n    description: \"\",\n    skills: \"\",\n    job_type: \"\",\n    departments_preferred: \"\",\n    major_preferred: \"\",\n    availability_seats: \"\",\n    salary: \"\",\n    start_date: \"\",\n    duration: \"\",\n    city: \"\"\n  },\n  registerOpportunity: async () => {\n    const {\n      values\n    } = OpportunityStore.getState(); // add opportunity\n\n    await axios.post(\"/api/v1/opportunities/registerOpportunity\", values, {\n      withCredentials: true\n    });\n    set({\n      values: {\n        job_role: \"\",\n        description: \"\",\n        skills: \"\",\n        job_type: \"\",\n        departments_preferred: \"\",\n        major_preferred: \"\",\n        availability_seats: \"\",\n        salary: \"\",\n        start_date: \"\",\n        duration: \"\",\n        city: \"\"\n      }\n    });\n  },\n  application: {\n    application: \"\"\n  },\n  handleUpdate: async e => {\n    const {\n      name,\n      value\n    } = e.target;\n    set(state => {\n      return {\n        updateStatue: { ...state.updateStatue,\n          [name]: value\n        }\n      };\n    });\n  },\n  handleChange: async e => {\n    const {\n      name,\n      value\n    } = e.target;\n    set(state => {\n      return {\n        values: { ...state.values,\n          [name]: value\n        }\n      };\n    });\n  }\n}));\n_c2 = OpportunityStore;\nexport default OpportunityStore;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OpportunityStore$create\");\n$RefreshReg$(_c2, \"OpportunityStore\");","map":{"version":3,"names":["create","axios","OpportunityStore","set","opportunities","opportunity","fetchOpportunities","res","get","withCredentials","data","fetchOpportunity","_id","fetchOpportunitiesCompany","fetchOpportunitiesCompanySorted","deleteOpportunity","delete","getState","newOpportunities","filter","updateStatue","job_role","description","skills","job_type","departments_preferred","major_preferred","availability_seats","salary","start_date","duration","city","visibility","toggleUpdate","updateOpportunity","put","values","registerOpportunity","post","application","handleUpdate","e","name","value","target","state","handleChange"],"sources":["/Applications/Applier/Applier/client/src/stores/OpportunityStore.js"],"sourcesContent":["import { create } from \"zustand\";\nimport axios from \"axios\";\n\nconst OpportunityStore = create((set) => ({\n  opportunities: null,\n  opportunity: null,\n  fetchOpportunities: async () => {\n    // Fetch the opportunities\n    const res = await axios.get(\"/api/v1/OpportunitiesApplications\", {\n      withCredentials: true,\n    });\n\n    // Set to state\n    set({ opportunities: res.data });\n  },\n\n  fetchOpportunity: async (_id) => {\n    // Fetch the consumers\n    const res = await axios.get(`/api/v1/opportunities/${_id}`, {\n      withCredentials: true,\n    });\n    // Set to state\n    set({ opportunity: res.data.opportunity });\n  },\n\n  fetchOpportunitiesCompany: async () => {\n    // Fetch the opportunities\n    const res = await axios.get(\"/api/v1/opportunitiesCompany\", {\n      withCredentials: true,\n    });\n    // Set to state\n    set({ opportunities: res.data.opportunities });\n  },\n\n  // fetchOpportunitiesCompanySorted\n  fetchOpportunitiesCompanySorted: async () => {\n    // Fetch the opportunities\n    const res = await axios.get(\"/api/v1/fetchOpportunitiesCompanySorted\", {\n      withCredentials: true,\n    });\n    // Set to state\n    set({ opportunities: res.data.opportunities });\n  },\n\n  deleteOpportunity: async (_id) => {\n    await axios.delete(\"/api/v1/opportunities/\" + _id, {\n      withCredentials: true,\n    });\n\n    const { opportunities } = OpportunityStore.getState();\n\n    //update page;\n    const newOpportunities = [...opportunities].filter((opportunity) => {\n      return opportunity._id !== _id;\n    });\n    set({ opportunities: newOpportunities });\n  },\n\n  updateStatue: {\n    _id: null,\n    job_role: \"\",\n    description: \"\",\n    skills: \"\",\n    job_type: \"\",\n    departments_preferred: \"\",\n    major_preferred: \"\",\n    availability_seats: \"\",\n    salary: \"\",\n    start_date: \"\",\n    duration: \"\",\n    city: \"\",\n    visibility: \"\",\n  },\n  toggleUpdate: ({\n    _id,\n    job_role,\n    description,\n    skills,\n    job_type,\n    departments_preferred,\n    major_preferred,\n    availability_seats,\n    salary,\n    start_date,\n    duration,\n    city,\n    visibility,\n  }) => {\n    set({\n      updateStatue: {\n        job_role,\n        description,\n        skills,\n        job_type,\n        departments_preferred,\n        major_preferred,\n        availability_seats,\n        salary,\n        start_date,\n        duration,\n        city,\n        visibility,\n        _id,\n      },\n    });\n  },\n  updateOpportunity: async () => {\n    const {\n      updateStatue: {\n        job_role,\n        description,\n        skills,\n        job_type,\n        departments_preferred,\n        major_preferred,\n        availability_seats,\n        salary,\n        start_date,\n        duration,\n        city,\n        visibility,\n        _id,\n      },\n    } = OpportunityStore.getState();\n\n    // Send the update request\n    await axios.put(\n      `/api/v1/opportunities/${_id}`,\n      {\n        job_role,\n        description,\n        skills,\n        job_type,\n        departments_preferred,\n        major_preferred,\n        availability_seats,\n        salary,\n        start_date,\n        duration,\n        city,\n        visibility,\n      },\n      { withCredentials: true }\n    );\n\n    set({\n      updateStatue: {\n        _id: null,\n        job_role: \"\",\n        description: \"\",\n        skills: \"\",\n        job_type: \"\",\n        departments_preferred: \"\",\n        major_preferred: \"\",\n        availability_seats: \"\",\n        salary: \"\",\n        start_date: \"\",\n        duration: \"\",\n        city: \"\",\n        visibility: \"\",\n      },\n    });\n  },\n\n  values: {\n    job_role: \"\",\n    description: \"\",\n    skills: \"\",\n    job_type: \"\",\n    departments_preferred: \"\",\n    major_preferred: \"\",\n    availability_seats: \"\",\n    salary: \"\",\n    start_date: \"\",\n    duration: \"\",\n    city: \"\",\n  },\n\n  registerOpportunity: async () => {\n    const { values } = OpportunityStore.getState();\n\n    // add opportunity\n    await axios.post(\"/api/v1/opportunities/registerOpportunity\", values, {\n      withCredentials: true,\n    });\n    set({\n      values: {\n        job_role: \"\",\n        description: \"\",\n        skills: \"\",\n        job_type: \"\",\n        departments_preferred: \"\",\n        major_preferred: \"\",\n        availability_seats: \"\",\n        salary: \"\",\n        start_date: \"\",\n        duration: \"\",\n        city: \"\",\n      },\n    });\n  },\n  application: {\n    application: \"\",\n  },\n  handleUpdate: async (e) => {\n    const { name, value } = e.target;\n\n    set((state) => {\n      return {\n        updateStatue: {\n          ...state.updateStatue,\n          [name]: value,\n        },\n      };\n    });\n  },\n  handleChange: async (e) => {\n    const { name, value } = e.target;\n\n    set((state) => {\n      return {\n        values: {\n          ...state.values,\n          [name]: value,\n        },\n      };\n    });\n  },\n}));\n\nexport default OpportunityStore;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}