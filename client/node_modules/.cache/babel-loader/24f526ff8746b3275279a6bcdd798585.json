{"ast":null,"code":"import { create } from \"zustand\";\nimport axios from \"axios\";\nconst AdminOperations = create(_c = set => ({\n  admins: null,\n  createForm: {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    password: \"\",\n    type: \"\"\n  },\n  updateForm: {\n    _id: null,\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    password: \"\",\n    type: \"\"\n  },\n  fetchAdmins: async () => {\n    const res = await axios.get(\"http://localhost:4000/api/v1/admins\"); // Set to state\n\n    set({\n      admins: res.data.admins\n    });\n  },\n  updateCreateFormField: e => {\n    const {\n      name,\n      value\n    } = e.target;\n    set(state => {\n      return {\n        createForm: { ...state.createForm,\n          [name]: value\n        }\n      };\n    });\n  },\n  createAdmin: async e => {\n    e.preventDefault();\n    const {\n      createForm,\n      admins\n    } = AdminOperations.getState();\n    const res = await axios.post(\"http://localhost:4000/api/v1/registerAdmin\", createForm);\n    set({\n      admins: [...admins, res.data.admin],\n      createForm: {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        password: \"\",\n        type: \"\"\n      }\n    });\n  },\n  deleteAdmin: async _id => {\n    const res = await axios.delete(`http://localhost:4000/api/v1/admins/${_id}`);\n    const {\n      admins\n    } = AdminOperations.getState(); // Update state\n\n    const newAdmins = admins.filter(admin => {\n      return admin._id !== _id;\n    });\n    set({\n      admins: newAdmins\n    });\n  },\n  handleUpdateFieldChange: e => {\n    const {\n      value,\n      name\n    } = e.target;\n    set(state => {\n      return {\n        updateForm: { ...state.updateForm,\n          [name]: value\n        }\n      };\n    });\n  },\n  toggleUpdate: _ref => {\n    let {\n      _id,\n      name,\n      body\n    } = _ref;\n    set({\n      updateForm: {\n        name,\n        body,\n        _id\n      }\n    });\n  },\n  updateAdmin: async e => {\n    e.preventDefault();\n    const {\n      updateForm: {\n        name,\n        body,\n        _id\n      },\n      admins\n    } = AdminOperations.getState(); // Send the update request\n\n    const res = await axios.put(`http://localhost:4000/api/v1/admins/${_id}`, {\n      name,\n      body\n    }); // Update state\n\n    const newAdmins = [...admins];\n    const adminIndex = admins.findIndex(admin => {\n      return admin._id === _id;\n    });\n    newAdmins[adminIndex] = res.data.admin;\n    set({\n      admins: newAdmins,\n      updateForm: {\n        _id: null,\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        password: \"\",\n        type: \"\"\n      }\n    });\n  }\n}));\n_c2 = AdminOperations;\nexport default AdminOperations;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AdminOperations$create\");\n$RefreshReg$(_c2, \"AdminOperations\");","map":{"version":3,"names":["create","axios","AdminOperations","set","admins","createForm","name","email","phone","password","type","updateForm","_id","fetchAdmins","res","get","data","updateCreateFormField","e","value","target","state","createAdmin","preventDefault","getState","post","admin","deleteAdmin","delete","newAdmins","filter","handleUpdateFieldChange","toggleUpdate","body","updateAdmin","put","adminIndex","findIndex"],"sources":["/Applications/Applier/Untitled/client/src/context/AdminOperations.js"],"sourcesContent":["import { create } from \"zustand\";\nimport axios from \"axios\";\n\nconst AdminOperations = create((set) => ({\n  admins: null,\n\n  createForm: {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    password: \"\",\n    type: \"\",\n  },\n\n  updateForm: {\n    _id: null,\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    password: \"\",\n    type: \"\",\n  },\n\n  fetchAdmins: async () => {\n    const res = await axios.get(\"http://localhost:4000/api/v1/admins\");\n\n    // Set to state\n    set({ admins: res.data.admins });\n  },\n\n  updateCreateFormField: (e) => {\n    const { name, value } = e.target;\n\n    set((state) => {\n      return {\n        createForm: {\n          ...state.createForm,\n          [name]: value,\n        },\n      };\n    });\n  },\n\n  createAdmin: async (e) => {\n    e.preventDefault();\n\n    const { createForm, admins } = AdminOperations.getState();\n    const res = await axios.post(\"http://localhost:4000/api/v1/registerAdmin\", createForm);\n\n    set({\n      admins: [...admins, res.data.admin],\n      createForm: {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        password: \"\",\n        type: \"\",\n      },\n    });\n  },\n\n  deleteAdmin: async (_id) => {\n    const res = await axios.delete(`http://localhost:4000/api/v1/admins/${_id}`);\n    const { admins } = AdminOperations.getState();\n\n    // Update state\n    const newAdmins = admins.filter((admin) => {\n      return admin._id !== _id;\n    });\n\n    set({ admins: newAdmins });\n  },\n\n  handleUpdateFieldChange: (e) => {\n    const { value, name } = e.target;\n\n    set((state) => {\n      return {\n        updateForm: {\n          ...state.updateForm,\n          [name]: value,\n        },\n      };\n    });\n  },\n\n  toggleUpdate: ({ _id, name, body }) => {\n    set({\n      updateForm: {\n        name,\n        body,\n        _id,\n      },\n    });\n  },\n\n  updateAdmin: async (e) => {\n    e.preventDefault();\n\n    const {\n      updateForm: { name, body, _id },\n      admins,\n    } = AdminOperations.getState();\n\n    // Send the update request\n    const res = await axios.put(`http://localhost:4000/api/v1/admins/${_id}`, {\n      name,\n      body,\n    });\n\n    // Update state\n    const newAdmins = [...admins];\n    const adminIndex = admins.findIndex((admin) => {\n      return admin._id === _id;\n    });\n    newAdmins[adminIndex] = res.data.admin;\n\n    set({\n      admins: newAdmins,\n      updateForm: {\n        _id: null,\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        password: \"\",\n        type: \"\",\n      },\n    });\n  },\n}));\n\nexport default AdminOperations;"],"mappings":"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"},"metadata":{},"sourceType":"module"}