{"ast":null,"code":"import { create } from \"zustand\";\nimport axios from \"axios\";\nconst MedicalStore = create(_c = set => ({\n  medicalStudents: null,\n  medicalStudent: null,\n  fetchMedicalProfile: async () => {\n    try {\n      const response = await axios.get(\"/api/v1/medicalStudentProfile\", {\n        withCredentials: true\n      });\n      set({\n        medicalStudent: response.data.medicalStudent\n      });\n    } catch (error) {\n      console.error(error); // TODO: Handle errors\n    }\n  },\n  fetchMedicalStudents: async () => {\n    // Fetch the medicalStudents\n    const res = await axios.get(\"/api/v1/medicalStudents\", {\n      withCredentials: true\n    }); // Set to state\n\n    set({\n      medicalStudents: res.data.medicalStudents\n    });\n  },\n  fetchMedicalStudentsAdmin: async () => {\n    // Fetch the medicalStudents\n    const res = await axios.get(\"/api/v1/medicalStudentsAdmin\", {\n      withCredentials: true\n    }); // Set to state\n\n    set({\n      medicalStudents: res.data.medicalStudents\n    });\n  },\n  deleteMedicalStudent: async _id => {\n    await axios.delete(\"/api/v1/medicalStudents/\" + _id, {\n      withCredentials: true\n    });\n    const {\n      medicalStudents\n    } = MedicalStore.getState(); //update page;\n\n    const newMedicalStudents = [...medicalStudents].filter(medicalStudent => {\n      return medicalStudent._id !== _id;\n    });\n    set({\n      medicalStudents: newMedicalStudents\n    });\n  },\n  updateProfile: {\n    _id: null,\n    name: \"\",\n    phone_number: \"\",\n    nationality: \"\",\n    city: \"\",\n    gender: \"\",\n    profile_visibility: \"\",\n    main_major: \"\",\n    specialty: \"\"\n  },\n  toggleUpdate: _ref => {\n    let {\n      _id,\n      name,\n      phone_number,\n      nationality,\n      city,\n      gender,\n      profile_visibility,\n      main_major,\n      specialty\n    } = _ref;\n    set({\n      updateProfile: {\n        name,\n        phone_number,\n        nationality,\n        city,\n        gender,\n        profile_visibility,\n        main_major,\n        specialty,\n        _id\n      }\n    });\n  },\n  updateMedicalStudents: async () => {\n    const {\n      updateProfile: {\n        name,\n        phone_number,\n        nationality,\n        city,\n        gender,\n        profile_visibility,\n        main_major,\n        specialty,\n        _id\n      }\n    } = MedicalStore.getState(); // Send the update request\n\n    await axios.put(`/api/v1/medicalStudents/${_id}`, {\n      name,\n      phone_number,\n      nationality,\n      city,\n      gender,\n      profile_visibility,\n      main_major,\n      specialty\n    }, {\n      withCredentials: true\n    });\n    set({\n      updateProfile: {\n        _id: null,\n        name: \"\",\n        phone_number: \"\",\n        nationality: \"\",\n        city: \"\",\n        gender: \"\",\n        profile_visibility: \"\",\n        main_major: \"\",\n        specialty: \"\"\n      }\n    });\n  },\n  values: {\n    name: \"\",\n    email: \"\",\n    phone_number: \"\",\n    password: \"\",\n    nationality: \"\",\n    city: \"\",\n    gender: \"\",\n    main_major: \"\",\n    specialty: \"\"\n  },\n  handleUpdate: async e => {\n    const {\n      name,\n      value\n    } = e.target;\n    set(state => {\n      return {\n        updateProfile: { ...state.updateProfile,\n          [name]: value\n        }\n      };\n    });\n  },\n  registerMedical: async () => {\n    const {\n      values\n    } = MedicalStore.getState(); // add medicalStudent\n\n    await axios.post(\"/api/v1/registerMedicalStudent\", values, {\n      withCredentials: true\n    });\n    set({\n      values: {\n        name: \"\",\n        email: \"\",\n        phone_number: \"\",\n        password: \"\",\n        city: \"\",\n        gender: \"\",\n        main_major: \"\",\n        specialty: \"\"\n      }\n    });\n  },\n  handleChange: async e => {\n    const {\n      name,\n      value\n    } = e.target;\n    set(state => {\n      return {\n        values: { ...state.values,\n          [name]: value\n        }\n      };\n    });\n  },\n  loginFormMedical: {\n    email: \"\",\n    password: \"\"\n  },\n  handleChangeLogin: async e => {\n    const {\n      name,\n      value\n    } = e.target;\n    set(state => {\n      return {\n        loginFormMedical: { ...state.loginFormMedical,\n          [name]: value\n        }\n      };\n    });\n  },\n  loginMedicalStudent: async () => {\n    const {\n      loginFormMedical\n    } = MedicalStore.getState();\n    await axios.post(\"/api/v1/loginMedicalStudent\", loginFormMedical, {\n      withCredentials: true\n    });\n    set({\n      loggedIn: true\n    });\n  },\n  checkAuth: async () => {\n    try {\n      await axios.get(\"/api/v1/checkAuthMedicalStudent\", {\n        withCredentials: true\n      });\n      set({\n        loggedIn: true\n      });\n    } catch (err) {\n      set({\n        loggedIn: false\n      });\n    }\n  },\n  logout: async () => {\n    await axios.get(\"/api/v1/logoutMedicalStudent\", {\n      withCredentials: true\n    });\n    set({\n      loggedIn: false\n    });\n  },\n  isLoading: false,\n  isActive: true,\n  checkStatueMedical: async () => {\n    try {\n      await axios.get(\"/api/v1/checkStatueMedical\", {\n        withCredentials: true\n      });\n      set({\n        isActive: true\n      });\n    } catch (err) {\n      set({\n        isActive: false\n      });\n    }\n  }\n}));\n_c2 = MedicalStore;\nexport default MedicalStore;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MedicalStore$create\");\n$RefreshReg$(_c2, \"MedicalStore\");","map":{"version":3,"names":["create","axios","MedicalStore","set","medicalStudents","medicalStudent","fetchMedicalProfile","response","get","withCredentials","data","error","console","fetchMedicalStudents","res","fetchMedicalStudentsAdmin","deleteMedicalStudent","_id","delete","getState","newMedicalStudents","filter","updateProfile","name","phone_number","nationality","city","gender","profile_visibility","main_major","specialty","toggleUpdate","updateMedicalStudents","put","values","email","password","handleUpdate","e","value","target","state","registerMedical","post","handleChange","loginFormMedical","handleChangeLogin","loginMedicalStudent","loggedIn","checkAuth","err","logout","isLoading","isActive","checkStatueMedical"],"sources":["/Applications/Applier/Applier/client/src/stores/MedicalStore.js"],"sourcesContent":["import { create } from \"zustand\";\nimport axios from \"axios\";\n\nconst MedicalStore = create((set) => ({\n  medicalStudents: null,\n  medicalStudent: null,\n\n  fetchMedicalProfile: async () => {\n    try {\n      const response = await axios.get(\"/api/v1/medicalStudentProfile\", {\n        withCredentials: true,\n      });\n      set({ medicalStudent: response.data.medicalStudent });\n    } catch (error) {\n      console.error(error);\n      // TODO: Handle errors\n    }\n  },\n  fetchMedicalStudents: async () => {\n    // Fetch the medicalStudents\n    const res = await axios.get(\"/api/v1/medicalStudents\", {\n      withCredentials: true,\n    });\n    // Set to state\n    set({ medicalStudents: res.data.medicalStudents });\n  },\n  fetchMedicalStudentsAdmin: async () => {\n    // Fetch the medicalStudents\n    const res = await axios.get(\"/api/v1/medicalStudentsAdmin\", {\n      withCredentials: true,\n    });\n    // Set to state\n    set({ medicalStudents: res.data.medicalStudents });\n  },\n\n  deleteMedicalStudent: async (_id) => {\n    await axios.delete(\"/api/v1/medicalStudents/\" + _id, {\n      withCredentials: true,\n    });\n\n    const { medicalStudents } = MedicalStore.getState();\n\n    //update page;\n    const newMedicalStudents = [...medicalStudents].filter((medicalStudent) => {\n      return medicalStudent._id !== _id;\n    });\n    set({ medicalStudents: newMedicalStudents });\n  },\n\n  updateProfile: {\n    _id: null,\n    name: \"\",\n    phone_number: \"\",\n    nationality: \"\",\n    city: \"\",\n    gender: \"\",\n    profile_visibility: \"\",\n    main_major: \"\",\n    specialty: \"\",\n  },\n  toggleUpdate: ({\n    _id,\n    name,\n    phone_number,\n    nationality,\n    city,\n    gender,\n    profile_visibility,\n    main_major,\n    specialty,\n  }) => {\n    set({\n      updateProfile: {\n        name,\n        phone_number,\n        nationality,\n        city,\n        gender,\n        profile_visibility,\n        main_major,\n        specialty,\n        _id,\n      },\n    });\n  },\n  updateMedicalStudents: async () => {\n    const {\n      updateProfile: {\n        name,\n        phone_number,\n        nationality,\n        city,\n        gender,\n        profile_visibility,\n        main_major,\n        specialty,\n        _id,\n      },\n    } = MedicalStore.getState();\n\n    // Send the update request\n    await axios.put(\n      `/api/v1/medicalStudents/${_id}`,\n      {\n        name,\n        phone_number,\n        nationality,\n        city,\n        gender,\n        profile_visibility,\n        main_major,\n        specialty,\n      },\n      {\n        withCredentials: true,\n      }\n    );\n    set({\n      updateProfile: {\n        _id: null,\n        name: \"\",\n        phone_number: \"\",\n        nationality: \"\",\n        city: \"\",\n        gender: \"\",\n        profile_visibility: \"\",\n        main_major: \"\",\n        specialty: \"\",\n      },\n    });\n  },\n\n  values: {\n    name: \"\",\n    email: \"\",\n    phone_number: \"\",\n    password: \"\",\n    nationality: \"\",\n    city: \"\",\n    gender: \"\",\n    main_major: \"\",\n    specialty: \"\",\n  },\n\n  handleUpdate: async (e) => {\n    const { name, value } = e.target;\n\n    set((state) => {\n      return {\n        updateProfile: {\n          ...state.updateProfile,\n          [name]: value,\n        },\n      };\n    });\n  },\n\n  registerMedical: async () => {\n    const { values } = MedicalStore.getState();\n\n    // add medicalStudent\n    await axios.post(\"/api/v1/registerMedicalStudent\", values, {\n      withCredentials: true,\n    });\n    set({\n      values: {\n        name: \"\",\n        email: \"\",\n        phone_number: \"\",\n        password: \"\",\n        city: \"\",\n        gender: \"\",\n        main_major: \"\",\n        specialty: \"\",\n      },\n    });\n  },\n\n  handleChange: async (e) => {\n    const { name, value } = e.target;\n\n    set((state) => {\n      return {\n        values: {\n          ...state.values,\n          [name]: value,\n        },\n      };\n    });\n  },\n  loginFormMedical: {\n    email: \"\",\n    password: \"\",\n  },\n  handleChangeLogin: async (e) => {\n    const { name, value } = e.target;\n\n    set((state) => {\n      return {\n        loginFormMedical: {\n          ...state.loginFormMedical,\n          [name]: value,\n        },\n      };\n    });\n  },\n  loginMedicalStudent: async () => {\n    const { loginFormMedical } = MedicalStore.getState();\n\n    await axios.post(\"/api/v1/loginMedicalStudent\", loginFormMedical, {\n      withCredentials: true,\n    });\n\n    set({ loggedIn: true });\n  },\n  checkAuth: async () => {\n    try {\n      await axios.get(\"/api/v1/checkAuthMedicalStudent\", {\n        withCredentials: true,\n      });\n      set({ loggedIn: true });\n    } catch (err) {\n      set({ loggedIn: false });\n    }\n  },\n  logout: async () => {\n    await axios.get(\"/api/v1/logoutMedicalStudent\", {\n      withCredentials: true,\n    });\n    set({ loggedIn: false });\n  },\n\n  isLoading: false,\n  isActive: true,\n  checkStatueMedical: async () => {\n    try {\n      await axios.get(\"/api/v1/checkStatueMedical\", {\n        withCredentials: true,\n      });\n      set({ isActive: true });\n    } catch (err) {\n      set({ isActive: false });\n    }\n  },\n}));\n\nexport default MedicalStore;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}