{"ast":null,"code":"const createStoreImpl = createState => {\n  let state;\n  const listeners = /* @__PURE__ */new Set();\n\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\") ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach(listener => listener(state, previousState));\n    }\n  };\n\n  const getState = () => state;\n\n  const subscribe = listener => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n\n  const destroy = () => {\n    var _a;\n\n    if (((_a = import.meta.env) == null ? void 0 : _a.MODE) !== \"production\") {\n      console.warn(\"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\");\n    }\n\n    listeners.clear();\n  };\n\n  const api = {\n    setState,\n    getState,\n    subscribe,\n    destroy\n  };\n  state = createState(setState, getState, api);\n  return api;\n};\n\nconst createStore = createState => createState ? createStoreImpl(createState) : createStoreImpl;\n\nvar vanilla = createState => {\n  var _a;\n\n  if (((_a = import.meta.env) == null ? void 0 : _a.MODE) !== \"production\") {\n    console.warn(\"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\");\n  }\n\n  return createStore(createState);\n};\n\nexport { createStore, vanilla as default };","map":{"version":3,"names":["createStoreImpl","createState","state","listeners","Set","setState","partial","replace","nextState","Object","is","previousState","assign","forEach","listener","getState","subscribe","add","delete","destroy","_a","import","meta","env","MODE","console","warn","clear","api","createStore","vanilla","default"],"sources":["/Applications/Applier/Untitled/client/node_modules/zustand/esm/vanilla.mjs"],"sourcesContent":["const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\") ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    var _a;\n    if (((_a = import.meta.env) == null ? void 0 : _a.MODE) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, subscribe, destroy };\n  state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  var _a;\n  if (((_a = import.meta.env) == null ? void 0 : _a.MODE) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\nexport { createStore, vanilla as default };\n"],"mappings":"AAAA,MAAMA,eAAe,GAAIC,WAAD,IAAiB;EACvC,IAAIC,KAAJ;EACA,MAAMC,SAAS,GAAG,eAAgB,IAAIC,GAAJ,EAAlC;;EACA,MAAMC,QAAQ,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB;IACrC,MAAMC,SAAS,GAAG,OAAOF,OAAP,KAAmB,UAAnB,GAAgCA,OAAO,CAACJ,KAAD,CAAvC,GAAiDI,OAAnE;;IACA,IAAI,CAACG,MAAM,CAACC,EAAP,CAAUF,SAAV,EAAqBN,KAArB,CAAL,EAAkC;MAChC,MAAMS,aAAa,GAAGT,KAAtB;MACAA,KAAK,GAAG,CAACK,OAAO,IAAI,IAAX,GAAkBA,OAAlB,GAA4B,OAAOC,SAAP,KAAqB,QAAlD,IAA8DA,SAA9D,GAA0EC,MAAM,CAACG,MAAP,CAAc,EAAd,EAAkBV,KAAlB,EAAyBM,SAAzB,CAAlF;MACAL,SAAS,CAACU,OAAV,CAAmBC,QAAD,IAAcA,QAAQ,CAACZ,KAAD,EAAQS,aAAR,CAAxC;IACD;EACF,CAPD;;EAQA,MAAMI,QAAQ,GAAG,MAAMb,KAAvB;;EACA,MAAMc,SAAS,GAAIF,QAAD,IAAc;IAC9BX,SAAS,CAACc,GAAV,CAAcH,QAAd;IACA,OAAO,MAAMX,SAAS,CAACe,MAAV,CAAiBJ,QAAjB,CAAb;EACD,CAHD;;EAIA,MAAMK,OAAO,GAAG,MAAM;IACpB,IAAIC,EAAJ;;IACA,IAAI,CAAC,CAACA,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYC,GAAlB,KAA0B,IAA1B,GAAiC,KAAK,CAAtC,GAA0CH,EAAE,CAACI,IAA9C,MAAwD,YAA5D,EAA0E;MACxEC,OAAO,CAACC,IAAR,CACE,wMADF;IAGD;;IACDvB,SAAS,CAACwB,KAAV;EACD,CARD;;EASA,MAAMC,GAAG,GAAG;IAAEvB,QAAF;IAAYU,QAAZ;IAAsBC,SAAtB;IAAiCG;EAAjC,CAAZ;EACAjB,KAAK,GAAGD,WAAW,CAACI,QAAD,EAAWU,QAAX,EAAqBa,GAArB,CAAnB;EACA,OAAOA,GAAP;AACD,CA5BD;;AA6BA,MAAMC,WAAW,GAAI5B,WAAD,IAAiBA,WAAW,GAAGD,eAAe,CAACC,WAAD,CAAlB,GAAkCD,eAAlF;;AACA,IAAI8B,OAAO,GAAI7B,WAAD,IAAiB;EAC7B,IAAImB,EAAJ;;EACA,IAAI,CAAC,CAACA,EAAE,GAAGC,MAAM,CAACC,IAAP,CAAYC,GAAlB,KAA0B,IAA1B,GAAiC,KAAK,CAAtC,GAA0CH,EAAE,CAACI,IAA9C,MAAwD,YAA5D,EAA0E;IACxEC,OAAO,CAACC,IAAR,CACE,uGADF;EAGD;;EACD,OAAOG,WAAW,CAAC5B,WAAD,CAAlB;AACD,CARD;;AAUA,SAAS4B,WAAT,EAAsBC,OAAO,IAAIC,OAAjC"},"metadata":{},"sourceType":"module"}